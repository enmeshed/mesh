import path from 'path'
import { Container } from '@enmeshed/alpha'
import { singletonProvider, Log, StdoutLogWriter } from '@enmeshed/meshnode'
import { FileDataSource } from '@enmeshed/mesh-reflection-file-watcher'

import '@mesh/tasker'

// Log to stdout
Log.addWriter(new StdoutLogWriter())

// Provide cluster config to node
ds = new FileDataSource(path.resolve(process.argv[2], 'config', 'cluster.json'))
Container.provide(singletonProvider("node.reflectionDataSource", ds))

asyncMain() -/>
  healthCheck <- Container.get("http.healthcheck")
  <- Container.get("tasker.runloop")
  healthCheck.setHealthy(true)

asyncMain()
  .catch! (err) ->
    console.error(err)
    process.exit(1)
