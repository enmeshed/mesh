import { AppState } from './AppState'
import { useStoreQuery, useStoreItem } from './useStore'
import { useObservableField } from 'App/Data/useObservable'

// [ data, loading, errors ]
export useCalendars() ->
  calStore = AppState.sessionState.accessibleCalendars
  [ value, setQuery, loading, error ] = useStoreQuery(calStore, {})

  [ value or [], loading, error ]

export useCalendar(id) ->
  useStoreItem(AppState.sessionState.accessibleCalendars, id)

findMasterCalendar(cals) ->
  (cals or []).find(x -> x.master == true)

// Fetch the user's current active calendar
export useActiveCalendar() ->
  [ cals, calsLoading, calError ] = useCalendars()
  activeCalendarId = useObservableField(AppState.sessionState, "activeCalendar")
  let actualActiveCal = (cals or []).find(x -> x.id == activeCalendarId)
  if not actualActiveCal: now actualActiveCal = findMasterCalendar(cals)

  [actualActiveCal, activeCalendarId, calsLoading, calError]
