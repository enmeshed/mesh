import { entity, field, types, Entity } from '@ormojo/ephraim'
import { KvStore } from './KvStore'
import { EventStore } from './EventStore'
import { PostStore } from './PostStore'

{ moment } = require('globalthis')()

calMocks = [
  {
    id: "cal_1"
    name: "Master Calendar"
    zone: "America/Phoenix"
    allowedTargets: []
    defaultTargets: []
    master: true
  }
  {
    id: "cal_2"
    name: "Copper Still"
    zone: "America/New_York"
    allowedTargets: [
      {
        id: "sa_1"
        medium: "twitter"
        username: "@CopperStill"
      }
      {
        id: "sa_2"
        medium: "facebook"
        username: "Copper Still"
      }
    ]
    defaultTargets: [
      {
        id: "sa_1"
        medium: "twitter"
        username: "@CopperStill"
      }
      {
        id: "sa_2"
        medium: "facebook"
        subtype: "page"
        username: "Copper Still"
      }
    ]
  }
  {
    id: "cal_3"
    name: "Arcadia Roofing"
    zone: "America/Phoenix"
    allowedTargets: [
      {
        id: "sa_3"
        medium: "twitter"
        username: "@ArcadiaRoofing"
      }
      {
        id: "sa_4"
        medium: "facebook"
        subtype: "page"
        username: "Arcadia Roofing"
      }
    ]
    defaultTargets: [
      {
        id: "sa_3"
        medium: "twitter"
        username: "@ArcadiaRoofing"
      }
      {
        id: "sa_4"
        medium: "facebook"
        subtype: "page"
        username: "Arcadia Roofing"
      }
    ]
  }
]

saMocks = [
  {
    id: "sa_1"
    medium: "twitter"
    username: "@CopperStill"
  }
  {
    id: "sa_2"
    medium: "facebook"
    subtype: "page"
    username: "Copper Still"
  }
  {
    id: "sa_3"
    medium: "twitter"
    username: "@ArcadiaRoofing"
  }
  {
    id: "sa_4"
    medium: "facebook"
    subtype: "page"
    username: "Arcadia Roofing"
  }
]

postMocks = [
  {
    id: "post_1"
    calendarId: "cal_2"
    scheduledAt: moment("2021-02-23 17:00").unix()
    targets: [
      {
        id: "sa_1"
        medium: "twitter"
        username: "@CopperStill"
      }
      {
        id: "sa_2"
        medium: "facebook"
        subtype: "page"
        username: "Copper Still"
      }
    ]
    text: "Come to Copper Still for Happy Hour"
  }
  {
    id: "post_2"
    calendarId: "cal_3"
    scheduledAt: moment("2021-02-23 09:30").unix()
    targets: [
      {
        id: "sa_3"
        medium: "twitter"
        username: "@ArcadiaRoofing"
      }
      {
        id: "sa_4"
        medium: "facebook"
        subtype: "page"
        username: "Arcadia Roofing"
      }
    ]
    text: "Redo your roof with Arcadia"
  }
  {
    id: "post_3"
    calendarId: "cal_1"
    scheduledAt: moment("2021-02-23 12:30").unix()
    targets: [
      {
        id: "sa_1"
        medium: "twitter"
        username: "@CopperStill"
      }
      {
        id: "sa_2"
        medium: "facebook"
        subtype: "page"
        username: "Copper Still"
      }
      {
        id: "sa_3"
        medium: "twitter"
        username: "@ArcadiaRoofing"
      }
      {
        id: "sa_4"
        medium: "facebook"
        subtype: "page"
        username: "Arcadia Roofing"
      }
    ]
    text: "Happy National Nonsense Holiday to everyone!"
  }
  {
    id: "post_5"
    calendarId: "cal_2"
    scheduledAt: (->
      unix = moment.tz("2021-02-24 17:00","America/New_York").unix()
      unix
    )()
    zone: "America/New_York"
    targets: [
      {
        id: "sa_1"
        medium: "twitter"
        username: "@CopperStill"
      }
      {
        id: "sa_2"
        medium: "facebook"
        subtype: "page"
        username: "Copper Still"
      }
    ]
    text: "Test post to Copper Still calendar at 5EST Feb 24"
  }
]

eventMocks = [
  {
    id: "event_1"
    time: moment("2021-01-20 00:01").unix()
    type: "notice"
    summary: "FB login expires"
    detail: "Your Facebook login credentials will expire on this day. Please renew them before then to ensure that your Facebook posts go out as scheduled."
    warning: true
  }
  {
    id: "event_1"
    time: moment("2021-02-20 00:01").unix()
    type: "notice"
    summary: "FB login expires"
    detail: "Your Facebook login credentials will expire on this day. Please renew them before then to ensure that your Facebook posts go out as scheduled."
    warning: true
  }
]

@entity({name: 'SessionState'}) class SessionState extends Entity {
  _init() ->
    this.accessibleCalendars.idPrefix = 'cal_'
    this.accessibleCalendars.set(calMocks)
    this.accessibleAccounts.idPrefix = 'sa_'
    this.accessibleAccounts.set(saMocks)
    this.posts.events = this.events
    this.posts.set(postMocks)
    this.events.set(eventMocks)

  // Calendars accessible by the user
  @field(KvStore) accessibleCalendars = {}
  // Calendar ID of the currently active calendar
  @field(types.string) activeCalendar = 'cal_1'
  // SocialAccounts accessible by the user
  @field(KvStore) accessibleAccounts = {}
  // Posts cache
  @field(PostStore) posts = {}
  // Calendar events cache
  @field(EventStore) events = {}

}

export { SessionState }
