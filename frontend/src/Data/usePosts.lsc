import { AppState } from './AppState'
import { useStoreQuery } from './useStore'
import { useEffect } from 'react'

// Returns [ posts, loading, error ]
export usePosts() ->
  postStore = AppState.sessionState.posts
  [ value, setQuery, loading, error ] = useStoreQuery(postStore, {})

  [ value or [], loading, error ]

export useCalendarEvents(start, end, calendarId, opts = {}) ->
  now calendarId = calendarId or 'all'
  eventStore = AppState.sessionState.events

  makeQuery() -> {
    after: start
    before: end
    calendarId
  }

  [ value, setQuery, loading, error ] = useStoreQuery(eventStore, makeQuery(), opts)
  queryChangeEffect(): void ->
    if opts.debug: console.log("useCalendarEvents.queryChangeEffect", start, end, calendarId)
    setQuery(makeQuery())
  useEffect(queryChangeEffect, [ start, end, calendarId ])

  [ value, loading, error ]
