import { useState, useEffect } from 'react'
escapeStringRegexp = require('escape-string-regexp')

mocks = [
  {
    id: "ci_1"
    libraryId: "library_1"
    body: "A horse is a horse of course of course"
    media: [
      {
        type: 'image'
        thumbUrl: 'https://images.pexels.com/photos/2928178/pexels-photo-2928178.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'
      }
    ]
    tags: ['tagged']
  }
  {
    id: "ci_2"
    libraryId: "library_1"
    body: `I heartily accept the motto,—“That government is best which governs least;” and I should like to see it acted up to more rapidly and systematically. Carried out, it finally amounts to this, which also I believe—“That government is best which governs not at all;” and when men are prepared for it, that will be the kind of government which they will have. Government is at best but an expedient; but most governments are usually, and all governments are sometimes, inexpedient. The objections which have been brought against a standing army, and they are many and weighty, and deserve to prevail, may also at last be brought against a standing government. The standing army is only an arm of the standing government. The government itself, which is only the mode which the people have chosen to execute their will, is equally liable to be abused and perverted before the people can act through it. Witness the present Mexican war, the work of comparatively a few individuals using the standing government as their tool; for, in the outset, the people would not have consented to this measure.`
    media: [
      {
        type: 'image'
        thumbUrl: 'https://images.pexels.com/photos/803975/pexels-photo-803975.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'
      }
    ]
    tags: ['tagged']
  }
  {
    id: "ci_3"
    libraryId: "library_1"
    body: "Chillin at the lake"
    media: [
      {
        type: 'image'
        thumbUrl: 'https://images.pexels.com/photos/346529/pexels-photo-346529.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'
      }
    ]
    tags: ['tagged']
  }
  {
    id: "ci_4"
    libraryId: "library_1"
    body: "Surf's up my dude"
    media: [
      {
        type: 'image'
        thumbUrl: 'https://images.pexels.com/photos/1295138/pexels-photo-1295138.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'
      }
    ]
    tags: ['numeric', 'even']
  }
  {
    id: "ci_5"
    libraryId: "library_1"
    body: "Chapel"
    media: [
      {
        type: 'image'
        thumbUrl: 'https://images.pexels.com/photos/4916560/pexels-photo-4916560.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'
      }
    ]
    tags: ['fifth', 'numeric']
  }
  {
    id: "ci_6"
    libraryId: "library_1"
    body: "Text only and this text should go all the way across the screen without interruption"
    tags: ['only text']
  }
]

searchMocks(phrase) ->
  if not phrase: return mocks
  rexp = new RegExp('.*' + escapeStringRegexp(phrase) + '.*', 'i')

  [...for elem mock in mocks:
    if mock.body and rexp.test(mock.body): [mock]
  ]

searchById(id) ->
  [...for elem mock in mocks:
    if mock.id == id: [mock]
  ]

// [ data, loading, errors ]
export useContent({search, id}, chain) ->
  [ results, setResults ] = useState([])

  useEffect(
    (): void ->
      if typeof(search) == 'string':
        x = searchMocks(search)
        setResults(x)
        if chain: chain(x)
      elif typeof(id) == 'string':
        x = searchById(id)
        setResults(x)
        chain(x)
    [search, id]
  )

  [ results, false, false ]
