import React from 'react'
import { useStyletron } from 'baseui'
import { useNavigate } from '@reach/router'

import { AppState } from 'App/Data/AppState'

import { FormControl } from 'baseui/form-control'
import { DatePicker } from 'baseui/datepicker'
import { TimePicker } from 'baseui/timepicker'
import { TimezonePicker } from 'baseui/timezonepicker'
import { Select } from 'baseui/select'
import { Textarea } from "baseui/textarea"
import { FileUploader } from "baseui/file-uploader"
import { Button } from 'baseui/button'

import { VerticalScrollArea } from '../Layout'
import { FormSection, FormControlGroup, FormScreen } from 'App/Util/Forms'

{ moment } = require('globalthis')()

// Post form
PostForm() ->
  [ css, theme ] = useStyletron()
  [ date, setDate ] = React.useState([new Date()])
  [ time, setTime ] = React.useState(new Date())
  [ zone, setZone ] = React.useState(moment.tz.guess())
  [ text, setText ] = React.useState('')
  navigate = useNavigate()
  validTargets = [
    { label: 'Twitter: @SimplibuzzTech', id: 1 }
    { label: 'Facebook Page: Simplibuzz Tech', id: 2 }
  ]
  [ targets, setTargets ] = React.useState([ ])

  onCancel() -> navigate(-1)
  onGetContent() ->
    AppState.uxState.saveWorkContext({
      type: 'post'
      contextDescription: `Choose content for your Post.`
      returnTo: '/main/post'
      hooks: {
        onChooseContent(content) ->
          console.log("chose content", content)
      }
    })
    navigate('/main/content')

  <React.Fragment>
    <FormSection title="Schedule">
      <FormControlGroup>
          <FormControl label="Date">
            <DatePicker
              value={date}
              onChange={ ({date}) -> setDate(if Array.isArray(date): date else: [date])}
              formatString="MM/dd/yyyy"
            />
          </FormControl>
          <FormControl label="Time">
            <TimePicker
              creatable
              value={time}
              onChange={ (time) -> setTime(time)}
            />
          </FormControl>
      </FormControlGroup>
      <FormControl label="Timezone">
        <TimezonePicker
          value={zone}
          onChange={ (zone) ->
            setZone(zone.id) }
        />
      </FormControl>
    </FormSection>

    <FormSection title="Targets">
      <FormControl label="Post To">
        <Select
          placeholder="Choose target accounts..."
          options={validTargets}
          value={targets}
          multi
          onChange={ (params) -> setTargets(params.value) }
          clearable searchable
        />
      </FormControl>
    </FormSection>

    <FormSection title="Content">
      <Button onClick={onGetContent}>Get Content from Library</Button>
      <FormControl label="Text">
        <Textarea
          value={text}
          onChange={(ev) -> setText(ev.target.value)}
          placeholder="Enter the text to post..."
        />
      </FormControl>
      <FormControl label="Image">
        <FileUploader />
      </FormControl>
    </FormSection>

    <FormControlGroup tight>
      <Button>Post</Button>
      <Button>Save Draft</Button>
      <Button kind="secondary" onClick={onCancel}>Cancel</Button>
    </FormControlGroup>
  </React.Fragment>

// Post screen
export Post({location}) ->
  console.log("location", location)
  <FormScreen>
    <PostForm />
  </FormScreen>
